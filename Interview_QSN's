--------: LINUX :-------------
1. Application port is running or not ?
 - command using 'netstat -lntpu'
 - ex- tomcat 8080,nginx 80

2. Memory Check                                                       
 - "TOP" Able to see the CPU Usages: 
 - "free -h" primary memory RAM Usages:
 - "df -h" secondary memory HDD Usages: 
 - "du" directory memory check:
 - uptime: Load Average: 

3. SOFT LINK VS HARD LINK & INODE IN LINUX:
 - Soft Link: It stores the path of the File and works as a shortcut to the file.
           ln  -s [original filename] [link name] 

 - Hard Link: Points directly to the inode of another file
           ln  [original filename] [link name]

 - An inode stores metadata for each file and directory in the file system, 
     such as (File type, File size, Owner ID, Group ID, Read, write and execute permissions)

4. cron-job ?
 - to run the script in a particular interval. 
Ex:
 - * * * * *: the job runs every minute
 - * 0 1 1 1: the job runs every minute of the midnight hour on January 1st and Mondays.

5. What is AWK & SED command
sed -> stream editor that allows users to perform basic text transformations. Insertion, deletion, search and replace(substitution).
e.g unix is great os. 
$sed 's/unix/linux/' geekfile.txt
-- above statement will be replaced by linux is great os. 
e.g. 2: $sed 's/unix/linux/2' geekfile.txt -> Replacing the nth occurrence of a pattern in a line 
e.g. 3: $sed 's/unix/linux/g' geekfile.txt -> Replacing all the occurance of the line

awk -> Awk is mostly used for pattern scanning and processing of text file-in particular data files that are organized by rows and columns
e.g $ awk '{print}' employee.txt
$ awk '{print, $2}' employee.txt ----> to print the second column
NR -> Display field number
NF -> Display last field

6. Directory structure in linux
/root -> for root user, root user can only create, del, modify anything
/home -> This is for specific user, no other user can manipulate anything in this. e.g. /home/bulbul
/bin (binaries) -> all the commands for all the user are available here
/sbin (system binaries) -> commands available only for root users, used for performing major changes in the config file, or any system changes
/dev (Device files) -> Interface between the hardware and software (hardware info and software info)
/media
/etc (editable text configuration) -> all the config files of the application is getting stored here
/sys (System) -> hardware related info is getting stored here
/lib (system libraries) -> libraries required to run the application
/tmp (temporary files) 
/usr (user program)
/var (variable files) -> cache,logs,email files,backup files,spool
/opt (optional application) -> third party tool 

7. Daily/10 cmds in linux
 - ls 
 - ls -ltrh 
 - cd <dirname/>
 - rm -rf <filename> 
 - cat <filename>
 - vi <filename>
 - free -h
 - df -h
 - Grep -i word <filename>
 - find / -name <filename> 

8. How to check public IP, Private IP & Linux system version
 - Private ip: hostname -i
 - Public ip: curl ifconfig.me
 - To see the current ip address on linux: ifconfig
 - Linux OS Version: cat /etc/os-release (or) hostnamectl (or) cat /etc/*release (or) cat /etc/*version 
 - Linux Kernel version: uname -a

9. How to search file's in linux? use of Find & GREP cmd
- Grep -> To search text or strings in a file 
  e.g. Grep -i word <filename>
- Find -> Search the path of file or Directory
  e.g. find <path of file>, find /home/dir1/file1
     find . -name <filename> -> To search in present directory
     find / -name <filename> -> To search in entire filesystem
     find . -name *.war -> To search a file

10. File permission & examples 
chmod -> Change file permissions.
e.g. chmod +rwx Filename
     chmod 774 (user,group,other) Filename
     chmod 664 Filename
    
chown -> Change File owner.
e.g. chown <New owner> Filename

chgrp -> Change group ownership.
e.g. chgrp <New group> Filename

11. How to see if a linux service is running?
- redhat/fedora/centos/amazon linux : systemctl status <service-name>
- ubuntu : service <service-name> status
PACKAGE INSTALLATION:
- redhat/fedora/centos/amazon linux : yum install git -y
- ubuntu : apt-get install git -y

12. What is SSH and how it is used?
- secure shell, used for secure remote access
- provides encrypted communication between client and server

13. 
=============================: GIT :=============================================
1. What is Git stash?
 - Sometimes you want to switch the branches, but you are working on an incomplete part of your current project.
 - Enables you to switch branches without committing the current branch.
 - $ git stash  

2. Difference between git statsh pop and apply?
 - $ git stash pop/ $ git stash apply
 - The difference between git stash pop vs git stash apply is that pop deletes the stash after files are moved into your working directory, 
   while apply does not

2. What is Git Reset?
 - when we want to move the repository back to a specific commit, discarding any changes made after that commit.
 - git reset <commithash>

3. What is Git Revert?
 - Reverts to a specified commit but keeps the history of every other commit made to the code base, 
   and creates a new commit for the reverted changes. 
 - git revert <commit ID>

4. Difference between Git pull and Git clone?
 - Git clone copies all files to the local machine, while git pull only copies the modified files to the local machine

5. What is the difference between Git pull and Fetch?
 - We use Git pull command to get changes from central repository. In this operation, internally two commands will get executed. One is Git fetch and another one is Git merge.
 - So Git pull is the combination of {Git pull & Git merge}.
 - Git fetch means, only bringing changes from central repo to local repo. But these changes will not be integrated to local repo which is there in your server.
 - Git merge means, merging changes to your local repository which is there in your server. Then only you can see these changes.
 
6. What is the difference between Git merge and rebase?
 - We often use these commands to merge code in multiple branches. Both are almost same but few differences. When you run Git merge, one new merge commit will be generated which is having the history of both development branches. 
 - It preserves the history of both branches. By seeing this merge commit, everyone will come to know that we merged two branches. 
 - If you do Git rebase, commits in new branch will be applied on top of base branch tip. 
 - There won’t be any merge commit here. It appears that you started working in one single branch form the beginning. 
 - This operation will not preserves the history of new branch.

7. What is Git Bisect?
 - Git Bisect we use to pick bad commit out of all good commits. 
 - Often developers do some mistakes. For them it is very difficult to pick that commit where mistake is there.
 - They go with building all commits one by one to pick bad commit. But Git bisect made their lives easy. Git bisect divides all commits equally in to two parts (bisecting equally). Now instead of building each commit, they go with building both parts. Where ever bad commit is there, that part build will be failed. We do operation many times till we get bad commit. So Git bisect allows you to find a bad commit out of good commits. You don’t have to trace down the bad commit by hand; git-bisect will do that for you.

8. What is Git squash?
 - To move multiple commits into its parent so that you end up with one commit. If you repeat this process multiple times, you can reduce “n” number of commits to a single one. Finally we will end up with only one parent commit. We use this operation just to reduce number of commits.
 - git rebase -i 3

10. What is Git cherry-pick?
 - When you go with git merge, all commits which are there in new development branch will be merged into current branch where you are. 
 - But sometimes, requirement will be in such that you would want to get only one commit form development branch instead of merging all commits. 
 - In this case we go with git cherry-pick. Git cherry-pick will pick only one commit whatever you select and merges with commits which are there in your current branch. 
 - So picking particular commit and merging into your current branch we call git cherry-pick.
11. Git Branching strategy ?
12. Git stages ?
 - Working space
 - Staging Area
 - Local Repo
 - Central repo



